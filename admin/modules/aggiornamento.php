<?php require_once '../includes/check_access.php'; ?>
<?php
require_once '../includes/versione.php';

// Estrai build corrente
preg_match('/rev\s*(\d+)/i', $versione, $match);
$build_corrente = isset($match[1]) ? (int)$match[1] : 0;

// Variabili già pronte dalle notifiche dinamiche
$build_nuovo = $notifiche[0]['testo'] ?? '';
preg_match('/rev\s*(\d+)/i', $build_nuovo, $m);
$rev_nuovo = isset($m[1]) ? (int)$m[1] : $build_corrente;

// Costruisci URL changelog e nome file
$rev_online = $rev_nuovo;
$rev_locale = $build_corrente;
$rev_successivo = $rev_locale + 1;

$log_url = "https://trac.eleonline.it/eleonline4/log/trunk?format=changelog&limit=100&mode=stop_on_copy&rev={$rev_online}&stop_rev={$rev_successivo}&verbose=on";

// Crea cartella tmp se non esiste
$log_dir = realpath(__DIR__ . '/../tmp');
if (!$log_dir) {
    $log_dir = __DIR__ . '/../tmp';
    if (!is_dir($log_dir)) {
        mkdir($log_dir, 0775, true);
    }
}

$log_file = "$log_dir/changelog_rev{$rev_locale}_{$rev_online}.log";

// Scarica il changelog solo se non esiste o è vecchio
if (!file_exists($log_file) || time() - filemtime($log_file) > 300) {
    $log_raw = @file_get_contents($log_url);
    if ($log_raw !== false) {
        file_put_contents($log_file, $log_raw);
    } else {
        $log_raw = "Errore durante il download del changelog.";
    }
} else {
    $log_raw = file_get_contents($log_file);

    // Dopo aver letto e usato il file, lo cancelliamo per non accumulare
    if (file_exists($log_file)) {
        unlink($log_file);
    }
}

// Funzione per convertire data inglese completa in italiano
function dataInItaliano($riga_data) {
    $timestamp = strtotime($riga_data);
    if (!$timestamp) return '';
    $mesi = ["", "gennaio", "febbraio", "marzo", "aprile", "maggio", "giugno",
             "luglio", "agosto", "settembre", "ottobre", "novembre", "dicembre"];
    $giorno = date("j", $timestamp);
    $mese = (int)date("n", $timestamp);
    $anno = date("Y", $timestamp);
    return "$giorno $mesi[$mese] $anno";
}



$log_contents = '';
$data_di_aggiornamento = '';  // inizializzo a stringa vuota

if (strpos($log_raw, 'Errore') === false) {
    $lines = explode("\n", $log_raw);
    $blocco = [];
    $in_blocco = false;

    foreach ($lines as $line) {
        $line_trim = trim($line);

        // Ignora righe vuote, commenti e intestazioni
        if ($line_trim === '' || str_starts_with($line_trim, '#') || str_contains($line_trim, 'ChangeLog') || str_contains($line_trim, 'Generated by Trac')) {
            continue;
        }

        // Cerca riga con data + autore + rev tra parentesi quadre
        // Es: Mon, 16 Jun 2025 06:10:39 GMT roby [478]
        if (preg_match('/^([A-Za-z]{3},\s\d{1,2}\s[A-Za-z]{3}\s\d{4}\s[\d:]{8}\sGMT).*\[(\d+)\]$/', $line_trim, $match)) {
            // Salva la prima data trovata in italiano (data completa)
            if ($data_di_aggiornamento === '') {
                $data_di_aggiornamento = dataInItaliano($match[1]);
            }
            // Se stiamo già leggendo un blocco, stampalo prima di iniziare nuovo
            if ($in_blocco) {
                $log_contents .= "<pre style='white-space: pre-wrap; font-family: monospace; margin-bottom: 1rem;'>" . htmlspecialchars(implode("\n", $blocco)) . "</pre>\n";
                $blocco = [];
            }

            // Intestazione
            $data_it = dataInItaliano($match[1]);
            $rev_corrente = $match[2];
            $log_contents .= "<strong>" . htmlspecialchars("$data_it rev. $rev_corrente") . "</strong>\n";

            $in_blocco = true;
            continue;
        }

        // Ignora righe trunk (es. * trunk/)
        if (str_starts_with($line_trim, '* trunk/')) {
            continue;
        }

        // Aggiungi riga al blocco
        if ($in_blocco) {
            $blocco[] = $line;
        }
    }

    // Stampa ultimo blocco se presente
    if (!empty($blocco)) {
        $log_contents .= "<pre style='white-space: pre-wrap; font-family: monospace; margin-bottom: 1rem;'>" . htmlspecialchars(implode("\n", $blocco)) . "</pre>\n";
    }

    if ($log_contents === '') {
        $log_contents = "Nessuna voce di changelog disponibile.";
    }
} else {
    $log_contents = htmlspecialchars($log_raw);
}
?>

<section class="content">
  <div class="container-fluid mt-4">

    <!-- Card iniziale: messaggio aggiornamento disponibile o no -->
    <div id="cardIniziale" class="card card-primary shadow-sm">
      <div class="card-header">
        <h3 class="card-title"><i class="fas fa-cogs me-2"></i>Aggiornamento Sistema</h3>
      </div>
      <div class="card-body">
        <?php if ($rev_online > $rev_locale): ?>
          <div class="alert alert-warning">
            <i class="fas fa-exclamation-triangle me-2"></i>
            È disponibile un aggiornamento alla revisione <strong><?= $rev_online ?></strong>.
          </div>
          <h5>Log delle modifiche:</h5>
          <?= $log_contents ?>
        <?php else: ?>
  <div class="alert alert-success">
    <i class="fas fa-check-circle me-2"></i>
    Non sono disponibili nuovi aggiornamenti.<br>
    Il sistema è aggiornato (revisione <?= $rev_locale ?>).
  </div>

  <div class="alert alert-info mt-4">
    <strong>Procedo con verifica e aggiornamento del solo db (all'ultima versione scaricata)?</strong><br>
    <em>È consigliato procedere solo dopo aver prodotto una copia di backup.</em>
    <div class="mt-3">
      <button id="btnAggiornaDB" class="btn btn-warning">
        <i class="fas fa-database me-2"></i>Aggiorna solo DB
      </button>
    </div>
  </div>

 <?php endif; ?>

      </div>
      <div class="card-footer text-end">
        <?php if ($rev_online > $rev_locale): ?>
          <button id="btnAggiorna" class="btn btn-primary"><i class="fas fa-download me-2"></i>Aggiorna ora</button>
        <?php else: ?>
          <a href="" class="btn btn-secondary"><i class="fas fa-sync-alt me-2"></i>Verifica di nuovo</a>
        <?php endif; ?>
      </div>
    </div>
 <!-- Area log per aggiornamento DB -->
  
  

    <!-- Card aggiornamento in corso: nascosta inizialmente -->
    <div id="cardAggiornamento" class="card card-info shadow-sm" style="display:none;">
      <div class="card-header">
        <h3 class="card-title" id="titoloAggiornamento"><i class="fas fa-spinner fa-spin me-2"></i>Aggiornamento in corso...</h3>
      </div>
      <div class="card-body">
        <pre id="logAggiornamento" style="white-space: pre-wrap; background:#f5f5f5; border:1px solid #ccc; padding:10px; height:300px; overflow:auto; font-family: monospace;"></pre>
      </div>
    </div>
 <!-- Card aggiornamento db in corso: nascosta inizialmente -->
<div id="cardAggiornaDB" class="card card-info shadow-sm" style="display:none;">
      <div class="card-header">
        <h3 class="card-title" id="titoloAggiornaDB"><i class="fas fa-spinner fa-spin me-2"></i>Aggiornamento Database in corso...</h3>
      </div>
      <div class="card-body">
        <div id="logAggiornaDB" class="mt-3" style="display:none; white-space: pre-wrap; background:#f0f0f0; border:1px solid #ccc; padding:10px; max-height:200px; overflow:auto; font-family: monospace;"></div>
      </div>
    </div>

  </div>
</section>

<script src="../plugins/jquery/jquery-3.6.0.min.js"></script>

<script>
$(document).ready(function(){

  $('#btnAggiorna').click(function(){
    $('#cardIniziale').hide();
    $('#cardAggiornamento').show();
    $('#logAggiornamento').html('');
    $('#btnAggiorna').prop('disabled', true);

    let steps = {}; // chiave = nome step, valore = stato

    function renderSteps() {
      let outputHtml = '';
      for (let step in steps) {
        if (steps[step] === 'ok') {
          outputHtml += '<div>' + step + ' <span style="color:green;">✔ OK</span></div>';
        } else {
          outputHtml += '<div>' + step + '</div>';
        }
      }
      $('#logAggiornamento').html(outputHtml);
      $('#logAggiornamento').scrollTop($('#logAggiornamento')[0].scrollHeight);
    }

    $.ajax({
      url: 'aggiorna_rev.php',  // <-- Ecco dove parte l'aggiornamento reale lato server
      type: 'POST',
      data: {
        data_rev: <?= json_encode($data_di_aggiornamento ?: '') ?>,
        rev_locale: <?= json_encode($rev_locale) ?>,
        rev_online: <?= json_encode($rev_online) ?>
      },
      xhrFields: {
        onprogress: function(e) {
          let raw = e.currentTarget.response;
          let lines = raw.split('\n').filter(line => line.trim() !== '');

          lines.forEach(function(line) {
            if (line.startsWith("__STEP__")) {
              let key = line.replace("__STEP__", "").trim();
              if (!steps[key]) steps[key] = 'in_corso';
              renderSteps();
            } else if (line.startsWith("__OK__")) {
              let key = line.replace("__OK__", "").trim();
              steps[key] = 'ok';
              renderSteps();
            } else if (line.startsWith("__FINISH__")) {
              let msg = line.replace("__FINISH__", "");
              $('#titoloAggiornamento').html('<i class="fas fa-check-circle me-2"></i>Aggiornamento completato');
              $('#logAggiornamento').append('<div style="color:green; margin-top:10px;">' + msg + '</div>');
              $('#btnAggiorna').prop('disabled', false);
            } else {
              // aggiungi testo log normale
              $('#logAggiornamento').append('<div>' + $('<div>').text(line).html() + '</div>');
              $('#logAggiornamento').scrollTop($('#logAggiornamento')[0].scrollHeight);
            }
          });
        }
      },
      success: function() {
        // eventuale azione al termine
      },
      error: function() {
        $('#logAggiornamento').append('<div style="color:red;">Errore durante l\'aggiornamento.</div>');
        $('#btnAggiorna').prop('disabled', false);
      }
    });
  });

document.getElementById('btnAggiornaDB').addEventListener('click', async function () {
  document.getElementById('cardIniziale').style.display = 'none';
  document.getElementById('cardAggiornaDB').style.display = 'block';

  const log = document.getElementById('logAggiornaDB');
  const btn = document.getElementById('btnAggiornaDB');
  const titolo = document.getElementById('titoloAggiornaDB');

  log.innerHTML = '';
  log.style.display = 'block';
  btn.disabled = true;
  btn.textContent = 'Aggiornamento DB in corso...';

  try {
    const response = await fetch('aggiornadb_output.php');

    if (!response.ok || !response.body) throw new Error("Errore nella risposta");

    const reader = response.body
      .pipeThrough(new TextDecoderStream())
      .getReader();

    let { value, done } = await reader.read();
    while (!done) {
      const lines = value.split('\n').filter(line => line.trim() !== '');
      lines.forEach(line => {
        const safeLine = document.createElement('div');
        safeLine.textContent = line;
        log.appendChild(safeLine);
      });
      log.scrollTop = log.scrollHeight;
      ({ value, done } = await reader.read());
    }

    btn.disabled = false;
    btn.textContent = 'Aggiorna solo DB';
    titolo.innerHTML = '<i class="fas fa-check-circle text-success me-2"></i>Aggiornamento completato';
    const success = document.createElement('div');
    success.style.color = 'green';
    success.style.marginTop = '10px';
    success.textContent = 'Aggiornamento DB completato con successo.';
    log.appendChild(success);
    log.scrollTop = log.scrollHeight;

  } catch (err) {
    btn.disabled = false;
    btn.textContent = 'Aggiorna solo DB';
    titolo.innerHTML = '<i class="fas fa-times-circle text-danger me-2"></i>Errore aggiornamento DB';
    const error = document.createElement('div');
    error.style.color = 'red';
    error.textContent = 'Errore durante l\'aggiornamento del DB.';
    log.appendChild(error);
    log.scrollTop = log.scrollHeight;
  }
});





});
</script>

